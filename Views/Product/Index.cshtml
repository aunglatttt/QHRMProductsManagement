@model QHRMProductsManagement.Models.PagedList

@{
    ViewData["Title"] = "Product List";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>Product List</h1>
    <a asp-action="Add" class="btn btn-primary">
        <i class="fas fa-plus-circle"></i> Add Product
    </a>
</div>

<div class="row mb-3">
    <div class="col-md-6">
        <div class="d-flex align-items-center">
            <span class="me-2">Show:</span>
            <select id="pageSizeSelect" class="form-select form-select-sm" style="width: auto;">
                <option value="5" selected="@(Model?.PageSize == 5)">5</option>
                <option value="10" selected="@(Model?.PageSize == 10)">10</option>
                <option value="25" selected="@(Model?.PageSize == 25)">25</option>
                <option value="50" selected="@(Model?.PageSize == 50)">50</option>
                <option value="100" selected="@(Model?.PageSize == 100)">100</option>
            </select>
            <span class="ms-2">entries</span>
        </div>
    </div>
    <div class="col-md-6 text-md-end">
        <div class="text-muted">
            Showing @((Model.CurrentPage - 1) * Model.PageSize + 1) to @Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalCount) of @Model.TotalCount entries
        </div>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead class="table-dark">
            <tr>
                <th>SN</th>
                <th>Product Name</th>
                <th>Price</th>
                <th>Description</th>
                <th>Created Date</th>
                <th class="text-center">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Products.Any())
            {
                int sn = (Model.CurrentPage - 1) * Model.PageSize + 1;
                foreach (var item in Model.Products)
                {
                    <tr>
                        <td>@(sn++)</td>
                        <td>@Html.DisplayFor(modelItem => item.ProductName)</td>
                        <td>@Html.DisplayFor(modelItem => item.Price)</td>
                        <td>@Html.DisplayFor(modelItem => item.Description)</td>
                        <td>@Html.DisplayFor(modelItem => item.CreatedDate)</td>
                        <td class="text-center">
                            <a asp-action="Edit" asp-route-id="@item.ProductId" class="btn btn-sm btn-info me-2" title="Edit">
                                <i class="fas fa-edit"></i>
                            </a>
                            <a asp-action="Delete" asp-route-id="@item.ProductId" class="btn btn-sm btn-danger" title="Delete">
                                <i class="fas fa-trash-alt"></i>
                            </a>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="6" class="text-center">No products found.</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (Model != null && Model.TotalPages > 0)
{
   <nav aria-label="Page navigation">
    <ul class="pagination flex-wrap justify-content-center">

        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage - 1)" asp-route-pageSize="@Model.PageSize">&laquo;</a>
        </li>

        @if (Model.TotalPages > 1)
        {
            <li class="page-item @(Model.CurrentPage == 1 ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="1" asp-route-pageSize="@Model.PageSize">1</a>
            </li>

            @if (Model.CurrentPage > 3)
            {
                <li class="page-item disabled"><span class="page-link">...</span></li>
            }

            @for (int i = Math.Max(2, Model.CurrentPage - 1); i <= Math.Min(Model.TotalPages - 1, Model.CurrentPage + 1); i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@i" asp-route-pageSize="@Model.PageSize">@i</a>
                </li>
            }

            @if (Model.CurrentPage < Model.TotalPages - 2)
            {
                <li class="page-item disabled"><span class="page-link">...</span></li>
            }

            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@Model.TotalPages" asp-route-pageSize="@Model.PageSize">@Model.TotalPages</a>
            </li>
        }

        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage + 1)" asp-route-pageSize="@Model.PageSize">&raquo;</a>
        </li>
    </ul>
</nav>

}

@section Scripts {
    <script>
        document.getElementById('pageSizeSelect').addEventListener('change', function() {
            const pageSize = this.value;
            const url = new URL(window.location.href);
            url.searchParams.set('pageSize', pageSize);
            url.searchParams.set('pageNumber', 1);
            window.location.href = url.toString();
        });
    </script>
}